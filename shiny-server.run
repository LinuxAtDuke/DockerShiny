#!/bin/bash

create_logfile () {
  local logdir="/var/log/shiny-server"
  local logfile="${logdir}/shiny-server.log"

  if [[ ! -d $logdir ]]
  then
    mkdir $logdir
  fi

  if [[ ! -f $logfile ]]
  then
    touch $logfile
    chown shiny.shiny $logdir $logfile
  fi

  return 0
}

log () {
  local message="${1}"
  local logdir="/var/log/shiny-server"
  local logfile="${logdir}/shiny-server.log"

  echo "[INFO]: ${message}" | tee $logfile
  return 0
}


clone_user_repo () {
  
  # If the USER_REPO var is not zero length, then try to clone it
  if [[ ! -z $USER_REPO ]]
  then
    local repo="${USER_REPO}"
    local dir="/srv/$(echo ${repo} | awk -F/ '{print $NF}' | sed 's/.git$//')"
    
    # Check to make sure nothing is there first
    if [[ ! -d ${dir} ]]
    then

      log "[WARN] No shiny app found; cloning from ${repo}"
      if ! git clone ${repo} ${dir}
      then
        # We should not continue if we can't clone the repo
        log "[CRIT] Unable to clone repo: ${repo}"
        return 1
      fi

    fi

  else
    log "[INFO] No USER_REPO variable specified. Assuming a mounted or built-in shiny app"
  fi

  return 0
}
  




TODO:

  1. Check for extra packages, a la Drupal
  2. Check Symlink /srv/shiny-server
  3. How do deal with many apps in one?


      info "Checking for extra packages"
      bash -x /install-packages.sh ${DIR} \
      || err_out "Failed to install post-run packages"
  
      if [[ -d /srv/shiny-server ]]
      then info "Removing default shiny-server apps; linking cloned app"
        mv /srv/shiny-server /srv/shiny-server.bak
        ln -s ${DIR} /srv/shiny-server
      fi
    fi
    DIRS=$(ls /srv/shiny-server)
  
    for DIR in $DIRS
    do info "Found ${DIR}...looking for package files"
     bash -x /install-packages.sh ${DIR} \
     || err_out "Failed to install post-run packages"
    done
  fi
  
}



main () {

  create_logfile

  if ! clone_user_repo
  then
    exit 1
  fi

  log "[INFO] Pre-config complete.  Starting Shiny Server..."
  exec /usr/bin/shiny-server >> /var/log/shiny-server.log 2>&1
}
